/*******************************************************************************
 * Copyright 2009, Clark N. Hobbie
 * 
 * This file is part of the CLIPC library.
 * 
 * The CLIPC library is free software; you can redistribute it and/or modify it
 * under the terms of the Lesser GNU General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or (at
 * your option) any later version.
 * 
 * The CLIPC library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the Lesser GNU General Public
 * License for more details.
 * 
 * You should have received a copy of the Lesser GNU General Public License
 * along with the CLIP library; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 * 
 *******************************************************************************/
package com.lts.ipc;

/**
 * A problem occurred while trying to use an IPC mechanism.
 *
 * <P>
 * This class allows clients to distinguish between exceptions generated by the classes
 * in this package and exceptions from other sources.  The exact nature of the exception
 * should be denoted by the message, which should be taken from one of the constants 
 * defined in the {@link Messages} class.
 * 
 * @author cnh
 */
@SuppressWarnings("serial")
public class IPCException extends Exception
{
	public static final String MSG_ALREADY_CONNECTED 
		= "The system is already connected to the shared memory segment";

	public static final String MSG_ERROR_OPENING_MAPPING_FILE 
		= "Caught an exception while trying to open the underlying file for the segment";

	public static final String MSG_ERROR_CREATING_MAP 
		= "Caught an exception while trying to obtain a map from the underlying file channel";

	public static final String MSG_NOT_CONNECTED 
		= "Attempt to access the segment before connecting to it.";

	public static final String MSG_PERMISSIONS =
		"The process is not allowed to manipulate the semaphore";
	
	public static final String MSG_UNKNOWN =
		"An unknown/unanticipated error occurred while trying ot manipulate the semaphore";
	
	public static final String MSG_EXCEPTION_CREATING_FILE =
		"Caught an exception while trying to create a file associated with the IPC mechanism";
	
	public enum Errors
	{
		AlreadyConnected(MSG_ALREADY_CONNECTED),
		ErrorOpeningMappingFile(MSG_ERROR_OPENING_MAPPING_FILE),
		ErrorCreatingMap(MSG_ERROR_CREATING_MAP),
		NotConnected(MSG_NOT_CONNECTED),
		Permissions(MSG_PERMISSIONS),
		Unknown(MSG_UNKNOWN),
		ExceptionCreatingFile(MSG_EXCEPTION_CREATING_FILE)
		;
		
		public String message;
		
		private Errors(String msg)
		{
			message = msg;
		}	
	}

	private Errors myError;
	
	public Errors getError()
	{
		return myError;
	}
	
	public void setError(Errors error)
	{
		myError = error;
	}
	
	
	public IPCException()
	{}
	
	public IPCException (String msg)
	{
		super(msg);
	}
	
	public IPCException(Throwable cause)
	{
		super(cause);
	}
	
	public IPCException (String msg, Throwable cause)
	{
		super(msg, cause);
	}

	public IPCException(Errors error)
	{
		super(error.message);
		setError(error);
	}
	
	
	public IPCException(Errors error, Throwable t)
	{
		super(error.message, t);
		setError(error);
	}
}
